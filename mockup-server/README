# Backend mock

start with

```
sbt run
```

when the server is up you should be able to send locationUpdates to ```http://localhost:9000/v1/locationUpdates```.
This API endpoints accepts application/json POST requests with arrays of location objects e.g.:

```
[
  {
    "lat": 90.0,     // latitude
    "lng": 11.2,     // longitude
    "ele": 10,       // elevation
    "timestamp": 10  // unix time in UTC when lat/lng/ele were sampled
  }
]
```

If you have ```curl``` installed on your machine you may test the service by executing the following command:

```
curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '[
  {
    "lat": 90.0,
    "lng": 11.2,
    "ele": 10,
    "timestamp": 10
  }
]' 'http://localhost:9000/v1/locationUpdates'

```

## Limitations

* The only load / delay on the server occurs when the received json is parsed & validated. We might need to
introduce a dummy load (Calculating a complex hashing function on the input or something akin to Thread.sleep)
* There are no ID's. In a real-world scenario (TM) we would probably use JSON web token (JWT) + OAUTH for this
(see https://tools.ietf.org/html/rfc7519 for JWT).